// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    Mux8Way16(a=RegisterA8, b=RegisterB8, c=RegisterC8, d=RegisterD8, e=RegisterE8, f=RegisterF8, g=RegisterG8, h=RegisterH8, sel=address[3..5], out=out);
    RAM8(in=in, load=loadA8, address=address[0..2], out=RegisterA8);
    RAM8(in=in, load=loadB8, address=address[0..2], out=RegisterB8);
    RAM8(in=in, load=loadC8, address=address[0..2], out=RegisterC8);
    RAM8(in=in, load=loadD8, address=address[0..2], out=RegisterD8);
    RAM8(in=in, load=loadE8, address=address[0..2], out=RegisterE8);
    RAM8(in=in, load=loadF8, address=address[0..2], out=RegisterF8);
    RAM8(in=in, load=loadG8, address=address[0..2], out=RegisterG8);
    RAM8(in=in, load=loadH8, address=address[0..2], out=RegisterH8);
    DMux8Way(in=load, sel=address[3..5], a=loadA8, b=loadB8, c=loadC8, d=loadD8, e=loadE8, f=loadF8, g=loadG8, h=loadH8);
}