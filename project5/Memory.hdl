// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/5/Memory.hdl
/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid and reads 0. Access to any address
 * in the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the Screen
 * and Keyboard chip specifications given in the lectures and the book.
 */
CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    Mux4Way16(a=RAM, b=RAM, c=SCREEN, d=KBD, sel=address[13..14], out=out);
	RAM16K(in=in, load=LoadRAM, address=address[0..13], out=RAM);
    Screen(in=in, load=LoadSCREEN, address=address[0..12], out=SCREEN);
    Keyboard(out=KBD);
    Not(in=address[14], out=Not14); //if bit 14 is 0, should load ram
    Not(in=address[13], out=Not13);
    And(a=Not13, b=address[14], out=Not13And14); // if bit 13 is 0 and bit 14 is 1, should load screen
    And(a=Not14, b=load, out=LoadRAM);
    And(a=Not13And14, b=load, out=LoadSCREEN);
}
